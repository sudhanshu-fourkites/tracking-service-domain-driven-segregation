spring:
  application:
    name: shipment-service
  
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/shipment_db}
    username: ${DB_USERNAME:shipment_user}
    password: ${DB_PASSWORD:changeme}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: public
        jdbc:
          lob:
            non_contextual_creation: true
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    show-sql: false
    open-in-view: false

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    enabled: true

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      compression-type: snappy
      batch-size: 16384
      linger-ms: 10
      buffer-memory: 33554432
    consumer:
      group-id: shipment-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      max-poll-records: 500
      properties:
        spring.json.trusted.packages: "*"

  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

  cache:
    type: redis
    redis:
      time-to-live: 600000
      cache-null-values: false

server:
  port: 8081
  servlet:
    context-path: /shipment-service

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  metrics:
    export:
      prometheus:
        enabled: true
  health:
    db:
      enabled: true
    redis:
      enabled: true

logging:
  level:
    com.fourkites.shipment: DEBUG
    org.springframework.kafka: INFO
    org.hibernate.SQL: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/shipment-service.log

kafka:
  topics:
    shipment-created: shipment-created
    shipment-updated: shipment-updated
    shipment-cancelled: shipment-cancelled
    shipment-delivered: shipment-delivered
    shipment-status-changed: shipment-status-changed
    location-updates: location-updates
    event-occurred: event-occurred

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true